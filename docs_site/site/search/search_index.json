{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WisH Where is Home About our project \u00b6 Context and motivation \u00b6 The real estate sector is constantly evolving and requires more and better solutions for finding properties. Currently, real estate search platforms are opting for a more traditional solution, focusing only on the physical characteristics of the property, without considering the factors related to the area where the property is located. This factor is extremely important to the client and can be the deciding factor in the final selection of the property. Lack of familiarity with the area can make it difficult to assess the quality of life, convenience, and suitability of the area for your particular needs. This can lead to less informed buying decisions and possibly dissatisfaction with your property choice. What is WisH? \u00b6 WisH: Where is Home is an innovative and personalized real estate research platform, instead of focusing only on the physical characteristics of properties, it takes into account the individual preferences of buyers, allowing them to explore areas of interest based on metrics relevant additional information, example Walk Score, Transit Score... Objectives \u00b6 The main objective of WisH is to provide a personalized and innovative real estate research platform, which allows users to explore areas of interest based on metrics relevant to their lifestyle, such as Walk Score, Transit Score, and others, allowing the customers to find the best place to live according to their preferences. Provide a platform to real state agents to promote their properties, and to reach potential customers, based on their preferences. Functional Requirements \u00b6 List of Features \u00b6 Customer Account \u00b6 Login/Register Process: Allows customers to create and log in to their account. Manage Account Details: Customers can update their personal information as needed. Manage Personal Preferences: Enables customers to set preferences such as metrics and aspects of importance to them. Seller Account \u00b6 Login/Register Process: Allows sellers to create and log in to their account. List Properties for Sale: Sellers can list their properties on the platform. Add Property Details: Enables sellers to provide details about their properties. Upload Photos and Videos: Sellers can upload visual content for their properties. ADMIN Account \u00b6 Login/Register Process: Allows administrators to create and log in to their account. Approve/Deny Properties: Administrators can review and approve/deny properties listed by sellers. Provide Feedback: Administrators can provide feedback to sellers regarding property listings. Customer Interaction \u00b6 Interact/Filter Using Evaluation Metrics: Customers can use various metrics to filter and select properties. View Results Based on Metrics: The platform displays properties based on the selected metrics. Feedback: Customers can provide feedback on their experience. Customer Support: Support is available for customer queries and issues. Actors \u00b6 Customer Seller Administrator Use Cases \u00b6 Our use cases can be described through the following diagram: Client \u00b6 Search Map Allow the user to search for different areas on the map, whether nationally, municipally, parish or subsection of each parish. Priority: High Adjust Criteria/Preferences Allow the user to change each of the metrics/themes present on our website, and if logged in to the system, they can save these metrics for future research. Priority: High See Personalized Best & Worst Areas Allow the user, when changing different metrics, to view a color gradient on the map that goes from red to green. Red indicates the worst areas and green the best, thus coloring each area according to the metrics provided by the user. Priority: High Select an area and see available properties After the different areas are colored with the color gradient, the user should be able to select any area on the map. He can also access the list of properties available in that area and obtain more detailed information about each of them. Priority: Medium Owner of a Property** \u00b6 Add Houses The owner of a house must be able to add new houses to our system, which can later be denied or accepted and presented to users of our website. Priority: Low Add physical details about house When adding a house, the property owner should be able to add all the information about the house, from basic information regarding the house, such as images of the rooms and the property. Priority: Low Change house state If the house is present in our system, the owner must be able to change the information regarding the house, which will again go through a validation process by the administrator, and must also be able to change the status of the house, in the case of rental or sale. Priority: Low Administrator \u00b6 Approve properties/bedrooms The administrator must be able to access all the information regarding each house and rooms and, after a validation process, can approve the house. Priority: Low Deny properties/bedrooms In addition to approving homes, the administrator must have the ability to deny a home. Priority: Low Give feedback on why it has been denied If you deny a property/room, you must provide a detailed explanation of the reason, allowing the owner to make the necessary changes for the house to be approved. Priority: Low Non-Functional Requirements \u00b6 Use of Standards \u00b6 Performance \u00b6 Response Time: The system should respond to user requests within a short period of time. Scalability: The system must be capable of handling an increase in the number of users without significant degradation of performance. Security \u00b6 Authentication and Authorization: The system should require authentication to access protected areas and ensure that only authorized users can perform certain actions (e.g., Listing Properties for Sale). Data Protection: The system must adhere to data security standards and privacy regulations, ensuring proper protection of user information. Usability \u00b6 Ease of Use: The system should be intuitive and easy to use, even for inexperienced users. Maintainability \u00b6 Ease of Maintenance: The system should be modular and well-documented, facilitating ongoing maintenance and updates. Domain Model \u00b6 The domain model for our system is represented in the following diagram: System Architecture \u00b6 The \"WisH: Where is Home\" platform architecture is divided into several interconnected components, ensuring a robust, scalable, and secure real estate solution. Below is an overview of each component's purpose and functionality within the system. Presentation Layer \u00b6 The Presentation Layer consists of a web application developed using React, a modern JavaScript library for building user interfaces. Additionally, Leaflet, a leading open-source JavaScript library for mobile-friendly interactive maps, is utilized to provide map-based functionalities to users. The React framework facilitates component-based development, offering a modular approach that is easy to test, read, and maintain. The inclusion of Leaflet allows for the integration of sophisticated map features, enhancing the user experience by allowing them to visually interact with property locations. Backend \u00b6 The Backend of the platform is powered by Django, a high-level Python Web framework that encourages rapid development and clean, pragmatic design. Django serves as the API provider, processing business logic and interfacing with both the Presentation Layer and Storage components. In conjunction with Django, the system utilizes GeoServer, an open-source server written in Java that allows users to share, process, and edit geospatial data. Running on Docker for easy deployment and isolation, GeoServer acts as middleware, facilitating the manipulation of spatial data. Storage \u00b6 The Storage component is composed of both relational and spatial databases. PostgreSQL, an advanced open-source relational database, provides robust data storage, processing, and integrity. Extended by PostGIS, a spatial database extender for PostgreSQL, the system gains the ability to handle geographic objects, allowing for complex spatial queries and data types, essential for real estate data analysis. Data Loader \u00b6 A Data Loader component, which includes a Data Processor, is responsible for handling and processing data from various sources. The system uses QGIS, an open-source geographic information system, to process and integrate spatial data. The sources for spatial data include: - Instituto Nacional Estat\u00edstica (INE), providing official statistical information. - GeoFabrick, offering open-source mapping data. - OpenStreetMap (OSM), a collaborative project to create a free editable map of the world. These sources are critical for the platform as they provide the necessary geographic data that forms the foundation of the property listings and analytics offered by WisH. Integration \u00b6 Each component is designed to work in tandem, providing a seamless user experience. The Presentation Layer communicates with the Backend to render dynamic content, while the Backend interfaces with the Storage to retrieve and store data. GeoServer and QGIS act as essential intermediaries for processing and visualizing geospatial data. By utilizing modern frameworks, databases, and standards, the WisH platform ensures a state-of-the-art system architecture that is well-equipped to meet the demands of today's real estate market. Deployment Architecture \u00b6 The \"WisH: Where is Home\" platform deployment diagram illustrates the physical setup of the system. It features a Virtual Machine hosting Docker containers, facilitating modular and efficient application deployment. NGINX serves as a reverse proxy, managing communication between Docker containers and external entities like users and data managers. This setup ensures scalability, flexibility, and robustness in our system architecture.","title":"Home"},{"location":"#about-our-project","text":"","title":"About our project"},{"location":"#context-and-motivation","text":"The real estate sector is constantly evolving and requires more and better solutions for finding properties. Currently, real estate search platforms are opting for a more traditional solution, focusing only on the physical characteristics of the property, without considering the factors related to the area where the property is located. This factor is extremely important to the client and can be the deciding factor in the final selection of the property. Lack of familiarity with the area can make it difficult to assess the quality of life, convenience, and suitability of the area for your particular needs. This can lead to less informed buying decisions and possibly dissatisfaction with your property choice.","title":"Context and motivation"},{"location":"#what-is-wish","text":"WisH: Where is Home is an innovative and personalized real estate research platform, instead of focusing only on the physical characteristics of properties, it takes into account the individual preferences of buyers, allowing them to explore areas of interest based on metrics relevant additional information, example Walk Score, Transit Score...","title":"What is WisH?"},{"location":"#objectives","text":"The main objective of WisH is to provide a personalized and innovative real estate research platform, which allows users to explore areas of interest based on metrics relevant to their lifestyle, such as Walk Score, Transit Score, and others, allowing the customers to find the best place to live according to their preferences. Provide a platform to real state agents to promote their properties, and to reach potential customers, based on their preferences.","title":"Objectives"},{"location":"#functional-requirements","text":"","title":"Functional Requirements"},{"location":"#list-of-features","text":"","title":"List of Features"},{"location":"#customer-account","text":"Login/Register Process: Allows customers to create and log in to their account. Manage Account Details: Customers can update their personal information as needed. Manage Personal Preferences: Enables customers to set preferences such as metrics and aspects of importance to them.","title":"Customer Account"},{"location":"#seller-account","text":"Login/Register Process: Allows sellers to create and log in to their account. List Properties for Sale: Sellers can list their properties on the platform. Add Property Details: Enables sellers to provide details about their properties. Upload Photos and Videos: Sellers can upload visual content for their properties.","title":"Seller Account"},{"location":"#admin-account","text":"Login/Register Process: Allows administrators to create and log in to their account. Approve/Deny Properties: Administrators can review and approve/deny properties listed by sellers. Provide Feedback: Administrators can provide feedback to sellers regarding property listings.","title":"ADMIN Account"},{"location":"#customer-interaction","text":"Interact/Filter Using Evaluation Metrics: Customers can use various metrics to filter and select properties. View Results Based on Metrics: The platform displays properties based on the selected metrics. Feedback: Customers can provide feedback on their experience. Customer Support: Support is available for customer queries and issues.","title":"Customer Interaction"},{"location":"#actors","text":"Customer Seller Administrator","title":"Actors"},{"location":"#use-cases","text":"Our use cases can be described through the following diagram:","title":"Use Cases"},{"location":"#client","text":"Search Map Allow the user to search for different areas on the map, whether nationally, municipally, parish or subsection of each parish. Priority: High Adjust Criteria/Preferences Allow the user to change each of the metrics/themes present on our website, and if logged in to the system, they can save these metrics for future research. Priority: High See Personalized Best & Worst Areas Allow the user, when changing different metrics, to view a color gradient on the map that goes from red to green. Red indicates the worst areas and green the best, thus coloring each area according to the metrics provided by the user. Priority: High Select an area and see available properties After the different areas are colored with the color gradient, the user should be able to select any area on the map. He can also access the list of properties available in that area and obtain more detailed information about each of them. Priority: Medium","title":"Client"},{"location":"#owner-of-a-property","text":"Add Houses The owner of a house must be able to add new houses to our system, which can later be denied or accepted and presented to users of our website. Priority: Low Add physical details about house When adding a house, the property owner should be able to add all the information about the house, from basic information regarding the house, such as images of the rooms and the property. Priority: Low Change house state If the house is present in our system, the owner must be able to change the information regarding the house, which will again go through a validation process by the administrator, and must also be able to change the status of the house, in the case of rental or sale. Priority: Low","title":"Owner of a Property**"},{"location":"#administrator","text":"Approve properties/bedrooms The administrator must be able to access all the information regarding each house and rooms and, after a validation process, can approve the house. Priority: Low Deny properties/bedrooms In addition to approving homes, the administrator must have the ability to deny a home. Priority: Low Give feedback on why it has been denied If you deny a property/room, you must provide a detailed explanation of the reason, allowing the owner to make the necessary changes for the house to be approved. Priority: Low","title":"Administrator"},{"location":"#non-functional-requirements","text":"","title":"Non-Functional Requirements"},{"location":"#use-of-standards","text":"","title":"Use of Standards"},{"location":"#performance","text":"Response Time: The system should respond to user requests within a short period of time. Scalability: The system must be capable of handling an increase in the number of users without significant degradation of performance.","title":"Performance"},{"location":"#security","text":"Authentication and Authorization: The system should require authentication to access protected areas and ensure that only authorized users can perform certain actions (e.g., Listing Properties for Sale). Data Protection: The system must adhere to data security standards and privacy regulations, ensuring proper protection of user information.","title":"Security"},{"location":"#usability","text":"Ease of Use: The system should be intuitive and easy to use, even for inexperienced users.","title":"Usability"},{"location":"#maintainability","text":"Ease of Maintenance: The system should be modular and well-documented, facilitating ongoing maintenance and updates.","title":"Maintainability"},{"location":"#domain-model","text":"The domain model for our system is represented in the following diagram:","title":"Domain Model"},{"location":"#system-architecture","text":"The \"WisH: Where is Home\" platform architecture is divided into several interconnected components, ensuring a robust, scalable, and secure real estate solution. Below is an overview of each component's purpose and functionality within the system.","title":"System Architecture"},{"location":"#presentation-layer","text":"The Presentation Layer consists of a web application developed using React, a modern JavaScript library for building user interfaces. Additionally, Leaflet, a leading open-source JavaScript library for mobile-friendly interactive maps, is utilized to provide map-based functionalities to users. The React framework facilitates component-based development, offering a modular approach that is easy to test, read, and maintain. The inclusion of Leaflet allows for the integration of sophisticated map features, enhancing the user experience by allowing them to visually interact with property locations.","title":"Presentation Layer"},{"location":"#backend","text":"The Backend of the platform is powered by Django, a high-level Python Web framework that encourages rapid development and clean, pragmatic design. Django serves as the API provider, processing business logic and interfacing with both the Presentation Layer and Storage components. In conjunction with Django, the system utilizes GeoServer, an open-source server written in Java that allows users to share, process, and edit geospatial data. Running on Docker for easy deployment and isolation, GeoServer acts as middleware, facilitating the manipulation of spatial data.","title":"Backend"},{"location":"#storage","text":"The Storage component is composed of both relational and spatial databases. PostgreSQL, an advanced open-source relational database, provides robust data storage, processing, and integrity. Extended by PostGIS, a spatial database extender for PostgreSQL, the system gains the ability to handle geographic objects, allowing for complex spatial queries and data types, essential for real estate data analysis.","title":"Storage"},{"location":"#data-loader","text":"A Data Loader component, which includes a Data Processor, is responsible for handling and processing data from various sources. The system uses QGIS, an open-source geographic information system, to process and integrate spatial data. The sources for spatial data include: - Instituto Nacional Estat\u00edstica (INE), providing official statistical information. - GeoFabrick, offering open-source mapping data. - OpenStreetMap (OSM), a collaborative project to create a free editable map of the world. These sources are critical for the platform as they provide the necessary geographic data that forms the foundation of the property listings and analytics offered by WisH.","title":"Data Loader"},{"location":"#integration","text":"Each component is designed to work in tandem, providing a seamless user experience. The Presentation Layer communicates with the Backend to render dynamic content, while the Backend interfaces with the Storage to retrieve and store data. GeoServer and QGIS act as essential intermediaries for processing and visualizing geospatial data. By utilizing modern frameworks, databases, and standards, the WisH platform ensures a state-of-the-art system architecture that is well-equipped to meet the demands of today's real estate market.","title":"Integration"},{"location":"#deployment-architecture","text":"The \"WisH: Where is Home\" platform deployment diagram illustrates the physical setup of the system. It features a Virtual Machine hosting Docker containers, facilitating modular and efficient application deployment. NGINX serves as a reverse proxy, managing communication between Docker containers and external entities like users and data managers. This setup ensures scalability, flexibility, and robustness in our system architecture.","title":"Deployment Architecture"},{"location":"specimen/","text":"Cinder Theme Specimen Typography \u00b6 Typefaces \u00b6 Headers: Inter Body: Open Sans Code: Hack Body Copy \u00b6 You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 . Lead Body Copy \u00b6 Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus. Headings \u00b6 All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline. h1. Heading h2. Heading h3. Heading h4. Heading h5. Heading h6. Heading h1. Heading Secondary text h2. Heading Secondary text h3. Heading Secondary text h4. Heading Secondary text h5. Heading Secondary text h6. Heading Secondary text Blockquotes \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title Lists \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Horizontal Description Lists \u00b6 Something This is something SomethingElse This is something else Contextual Colors \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Code \u00b6 Inline Code \u00b6 This is an example of inline code #import requests Preformatted Code Blocks with Syntax Highlighting def request(method, url, **kwargs): \"\"\"Constructs and sends a :class:`Request `. Usage:: >>> import requests >>> req = requests.request('GET', 'https://httpbin.org/get') \"\"\" # By using the 'with' statement we are sure the session is closed, thus we # avoid leaving sockets open which can trigger a ResourceWarning in some # cases, and look like a memory leak in others. with sessions.Session() as session: return session.request(method=method, url=url, **kwargs) def get(url, params=None, **kwargs): r\"\"\"Sends a GET request. :param url: URL for the new :class:`Request` object. :param params: (optional) Dictionary, list of tuples or bytes to send in the body of the :class:`Request`. :param \\*\\*kwargs: Optional arguments that ``request`` takes. :return: :class:`Response ` object :rtype: requests.Response \"\"\" kwargs.setdefault('allow_redirects', True) return request('get', url, params=params, **kwargs) (Source code sample from the Python requests library , Apache License, v2.0 ) Syntax highlighting support is available for and of the following languages listed on the highlightjs website . See the mkdocs \"styling your docs\" hljs_languages section for info on how to load languages dynamically. Note Include source code formatted in Github-flavored Markdown fenced code blocks with an info string that defines the supported programming language to automate syntax highlighting when your site is built. Tables \u00b6 Striped Table \u00b6 # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Bordered Table \u00b6 # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Buttons \u00b6 Default Buttons \u00b6 Link Button Styled Buttons \u00b6 Default Primary Success Info Warning Danger Button Sizes \u00b6 Large button Large button Default button Default button Small button Small button Extra small button Extra small button Block Level Buttons \u00b6 Block level button Block level button Alerts \u00b6 A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out! Callouts \u00b6 Default Callout This is a default callout. Primary Callout This is a primary callout. Success Callout This is a success callout. Info Callout This is an info callout. Warning Callout This is a warning callout. Danger Callout This is a danger callout. Admonitions \u00b6 The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a note def func(arg) { # notable things are in here! return None } Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a warning def func(arg) { # be careful! return None } Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is dangerous def func(arg) { # BOOM! return None }","title":"Specimen"},{"location":"specimen/#typography","text":"","title":"Typography"},{"location":"specimen/#typefaces","text":"Headers: Inter Body: Open Sans Code: Hack","title":"Typefaces"},{"location":"specimen/#body-copy","text":"You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 .","title":"Body Copy"},{"location":"specimen/#lead-body-copy","text":"Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.","title":"Lead Body Copy"},{"location":"specimen/#headings","text":"All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline.","title":"Headings"},{"location":"specimen/#blockquotes","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title","title":"Blockquotes"},{"location":"specimen/#lists","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Lists"},{"location":"specimen/#horizontal-description-lists","text":"Something This is something SomethingElse This is something else","title":"Horizontal Description Lists"},{"location":"specimen/#contextual-colors","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.","title":"Contextual Colors"},{"location":"specimen/#code","text":"","title":"Code"},{"location":"specimen/#inline-code","text":"This is an example of inline code #import requests","title":"Inline Code"},{"location":"specimen/#tables","text":"","title":"Tables"},{"location":"specimen/#striped-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Striped Table"},{"location":"specimen/#bordered-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Bordered Table"},{"location":"specimen/#buttons","text":"","title":"Buttons"},{"location":"specimen/#default-buttons","text":"Link Button","title":"Default Buttons"},{"location":"specimen/#styled-buttons","text":"Default Primary Success Info Warning Danger","title":"Styled Buttons"},{"location":"specimen/#button-sizes","text":"Large button Large button Default button Default button Small button Small button Extra small button Extra small button","title":"Button Sizes"},{"location":"specimen/#block-level-buttons","text":"Block level button Block level button","title":"Block Level Buttons"},{"location":"specimen/#alerts","text":"A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out!","title":"Alerts"},{"location":"specimen/#callouts","text":"","title":"Callouts"},{"location":"specimen/#admonitions","text":"The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a note def func(arg) { # notable things are in here! return None } Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a warning def func(arg) { # be careful! return None } Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is dangerous def func(arg) { # BOOM! return None }","title":"Admonitions"}]}